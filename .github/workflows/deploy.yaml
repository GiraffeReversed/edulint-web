name: Deploy
run-name: Deploy @${{ github.ref_name }} branch

on:
  push:
    branches:
    - main
    - dev

  workflow_dispatch:
  workflow_call:
    secrets:
      SSH_USERNAME:
        required: true
      SSH_KEY:
        required: true
      SSH_PROD_FOLDER:
        required: true
      SSH_DEV_FOLDER:
        required: true

    inputs:
      BRANCH:
        type: string
        required: true


env:
  BRANCH_REF: "${{ inputs.BRANCH || github.ref_name }}"

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ssh-host: ${{ fromJSON( (inputs.BRANCH || github.ref_name) == 'main' && '["contabo1","contabo2"]' || '["contabo1"]' ) }}
      fail-fast: true
      max-parallel: 1
    steps:
    - name: Commands over SSH
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ matrix.ssh-host }}.ip.borysek.eu
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        script_stop: true
        script: |
          cd ${{ env.BRANCH_REF == 'main' && secrets.SSH_PROD_FOLDER || secrets.SSH_DEV_FOLDER }}
          git fetch
          git reset --hard origin/${{ env.BRANCH_REF }}
          FRONTEND_TAG=${{ env.BRANCH_REF == 'main' && 'latest' || 'dev' }} docker compose pull
          FRONTEND_TAG=${{ env.BRANCH_REF == 'main' && 'latest' || 'dev' }} docker compose -f docker-compose.yml -f docker-compose.prod.yml up -d --build
          echo "Successfully deployed, hooray!"
